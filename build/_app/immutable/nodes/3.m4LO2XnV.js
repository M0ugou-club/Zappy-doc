import{s as i,n as t}from"../chunks/scheduler.BGzgsL_S.js";import{S as c,i as n,e as r,c as h,g as d,a as p,b as m,d as f}from"../chunks/index.0HuHwaNS.js";function u(a){let e,o=`<div class="space-y-5 w-full"><h1 class="h1 py-4"><b>Zappy</b></h1> <span>The goal of this project is to create a network game where several teams confront each other on
            a tile map containing resources. The winning team is the first one where at least 6 players reach the maximum elevation.<br/><br/>
            This documentation is written by the developers of the project and is intended to help new developers to join the project.</span> <hr class="!border-t-2 pb-8"/> <span>Each of the 3 programs composing this project can be launched with different parameters to customize its behavior:</span> <h3 class="h3">Server:</h3> <span><ul class="list-disc pl-5"><li><code class="code">-p port</code> Port the server will listen on.</li> <li><code class="code">-x width</code> Width of the world.</li> <li><code class="code">-y height</code> Height of the world.</li> <li><code class="code">-n team1 team2 ...</code> Name of the teams.</li> <li><code class="code">-c clientsNb</code> Initial number of authorized clients per team.</li> <li><code class="code">-f freq</code> Frequency multiplicator of the game.</li></ul></span> <h3 class="h3">AI:</h3> <span><ul class="list-disc pl-5"><li><code class="code">-n team</code> Name of the team.</li> <li><code class="code">-h host</code> Address of the host.</li> <li><code class="code">-p port</code> Port the host is listening on.</li></ul></span> <h3 class="h3">GUI:</h3> <span><ul class="list-disc pl-5"><li><code class="code">-h host</code> Address of the host.</li> <li><code class="code">-p port</code> Port the host is listening on.</li></ul></span></div>`;return{c(){e=r("div"),e.innerHTML=o,this.h()},l(s){e=h(s,"DIV",{class:!0,"data-svelte-h":!0}),d(e)!=="svelte-1b0l5fg"&&(e.innerHTML=o),this.h()},h(){p(e,"class","h-full m-8 flex")},m(s,l){m(s,e,l)},p:t,i:t,o:t,d(s){s&&f(e)}}}class b extends c{constructor(e){super(),n(this,e,null,u,i,{})}}export{b as component};
