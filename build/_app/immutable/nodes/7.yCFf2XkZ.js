import{s as Qe,n as pe}from"../chunks/scheduler.BGzgsL_S.js";import{S as $e,i as tl,e as n,s as i,t as o,c as a,f as u,g as c,h as s,j as r,d as h,a as b,b as el,k as t}from"../chunks/index.0HuHwaNS.js";function ll(Ke){let m,e,_,_e="<b>Server</b>",tt,w,Te="The server part is responsible for managing connections between clients and the game. It is written in C and only uses the standard library.",et,Q,lt,T,Ce="<b>Select</b>",nt,I,xe='The management of communication is done using the standard C library function <code class="code">select</code>',at,it,st,ot,rt,S,Le="Each time a client attempts to connect to the server, a new connection is created, this connection contains a character buffer, each time data is sent from the client to the server, it gets added to this buffer until a \\n is found, the buffer is then interpreted by the server and execute its corresponding action if found.",ct,C,ge="<b>Connection</b>",ht,A,ye="When a connection is established with the server, it initiates a <b>handshake</b>, it can branch into 2 different directions depending on the team the <b>client</b> is trying to join.",dt,x,He="AI:",ut,Z,f,N,Me="<-",bt,ft,vt,P,Ee="->",mt,pt,_t,q,we="<-",Tt,Ct,xt,O,Ie="<-",Lt,gt,yt,L,Se="GUI:",Ht,J,d,R,Ae="<-",Mt,Et,wt,W,Ne="->",It,St,At,k,Pe="<-",Nt,Pt,qt,B,qe="<-",Ot,Rt,Wt,D,Oe="<-",kt,Bt,Dt,U,Re="<-",Ut,zt,Ft,Gt,jt,z,We="ko",Vt,Xt,Yt,Zt,Jt,F,ke="bufferize",Kt,g,Be="<b>Map</b>",Qt,G,De=`<b>The map</b> is a <b>table of cells (2 dimensional array)</b> contained within the game structure. Each cell also contains a pointer to the cells at its 4 cardinal directions:
            <ul class="list-disc pl-5"><li>North (cell-&gt;north)</li> <li>East (cell-&gt;east)</li> <li>South (cell-&gt;south)</li> <li>West (cell-&gt;west)</li></ul>`,$t,y,Ue="<b>Cells</b>",te,j,ze=`<b>The cells</b> of the map are <b>linked</b> to each other <b>by pointers: &quot;NORTH/SOUTH/EAST/WEST</b>&quot;.
            <br/>Each cell contains:
            <ul class="list-disc pl-5"><li>an x position</li> <li>a y position</li> <li>a list of eggs</li> <li>a list of items</li> <li>and a boolean to indicate whether it has been updated</li></ul>`,ee,H,Fe="<b>Distribution of items</b>",le,V,Ge="<b>For each item</b>, the program adds the items <b>one by one</b> to <b>random tiles on the map</b>, taking care not to exceed the <b>maximum possible</b> number for each item. This maximum number is <b>calculated</b> according to this formula: <b>&quot;map_width * map_height * density&quot;</b>.",ne,M,je="<b>Eggs</b>",ae,X,Ve="<b>The eggs</b> are <b>distributed in the same way as the items</b>, but they are assigned an <b>ID and a team name</b>. The <b>maximum number of eggs per team</b> at the start of the game is defined with the <b>c flag</b>. Throughout the game, <b>players can lay eggs</b>. This allows them to  <b>connect more</b>.",ie,E,Xe="<b>Players</b>",se,Y,Ye=`<b>The players</b> are contained in a <b>linked list</b> stored within the &quot;game&quot; structure. Each player has a multitude of information and data:
            <ul class="list-disc pl-5"><li>such as an ID</li> <li>a team name</li> <li>a cell</li> <li>a direction</li> <li>an action cooldown</li> <li>a level</li> <li>an inventory</li> <li>a file descriptor</li> <li>an eating cooldown</li> <li>a boolean for connection</li> <li>another for incantation</li> <li>a pointer to the next player in the list</li></ul>`;return{c(){m=n("div"),e=n("div"),_=n("h1"),_.innerHTML=_e,tt=i(),w=n("span"),w.textContent=Te,et=i(),Q=n("hr"),lt=i(),T=n("h2"),T.innerHTML=Ce,nt=i(),I=n("span"),I.innerHTML=xe,at=i(),it=n("br"),st=i(),ot=n("br"),rt=i(),S=n("span"),S.textContent=Le,ct=i(),C=n("h2"),C.innerHTML=ge,ht=i(),A=n("span"),A.innerHTML=ye,dt=i(),x=n("h3"),x.textContent=He,ut=i(),Z=n("span"),f=n("ul"),N=n("li"),bt=o(Me),ft=o(" WELCOME"),vt=i(),P=n("li"),mt=o(Ee),pt=o(" AI_TEAM"),_t=i(),q=n("li"),Tt=o(we),Ct=o("  CONNECTIONS_LEFT"),xt=i(),O=n("li"),Lt=o(Ie),gt=o("  X Y"),yt=i(),L=n("h3"),L.textContent=Se,Ht=i(),J=n("span"),d=n("ul"),R=n("li"),Mt=o(Ae),Et=o(" WELCOME"),wt=i(),W=n("li"),It=o(Ne),St=o(" GRAPHIC"),At=i(),k=n("li"),Nt=o(Pe),Pt=o(" MSZ"),qt=i(),B=n("li"),Ot=o(qe),Rt=o(" MCT"),Wt=i(),D=n("li"),kt=o(Oe),Bt=o(" TNA"),Dt=i(),U=n("li"),Ut=o(Re),zt=o(" PNW (for each player already connected)"),Ft=i(),Gt=n("br"),jt=o(`
        If the team name is invalid, the server will instantly reply with a `),z=n("b"),z.textContent=We,Vt=o(` followed by a newline and close the connection.
        `),Xt=n("br"),Yt=i(),Zt=n("br"),Jt=o(`
        Since the AI's actions are limited by a cooldown, a queue of 10 commands is provided as to `),F=n("b"),F.textContent=ke,Kt=o(` its inputs, if the queue is full but the client still tries to send commands, this new command is ignored.
        `),g=n("h1"),g.innerHTML=Be,Qt=i(),G=n("span"),G.innerHTML=De,$t=i(),y=n("h1"),y.innerHTML=Ue,te=i(),j=n("span"),j.innerHTML=ze,ee=i(),H=n("h1"),H.innerHTML=Fe,le=i(),V=n("span"),V.innerHTML=Ge,ne=i(),M=n("h1"),M.innerHTML=je,ae=i(),X=n("span"),X.innerHTML=Ve,ie=i(),E=n("h1"),E.innerHTML=Xe,se=i(),Y=n("span"),Y.innerHTML=Ye,this.h()},l(K){m=a(K,"DIV",{class:!0});var $=u(m);e=a($,"DIV",{class:!0});var l=u(e);_=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(_)!=="svelte-238tlo"&&(_.innerHTML=_e),tt=s(l),w=a(l,"SPAN",{"data-svelte-h":!0}),c(w)!=="svelte-18gbno5"&&(w.textContent=Te),et=s(l),Q=a(l,"HR",{class:!0}),lt=s(l),T=a(l,"H2",{class:!0,"data-svelte-h":!0}),c(T)!=="svelte-n9wibm"&&(T.innerHTML=Ce),nt=s(l),I=a(l,"SPAN",{"data-svelte-h":!0}),c(I)!=="svelte-12heytm"&&(I.innerHTML=xe),at=s(l),it=a(l,"BR",{}),st=s(l),ot=a(l,"BR",{}),rt=s(l),S=a(l,"SPAN",{"data-svelte-h":!0}),c(S)!=="svelte-3wca28"&&(S.textContent=Le),ct=s(l),C=a(l,"H2",{class:!0,"data-svelte-h":!0}),c(C)!=="svelte-174fli6"&&(C.innerHTML=ge),ht=s(l),A=a(l,"SPAN",{"data-svelte-h":!0}),c(A)!=="svelte-hvin5z"&&(A.innerHTML=ye),dt=s(l),x=a(l,"H3",{class:!0,"data-svelte-h":!0}),c(x)!=="svelte-15e24xg"&&(x.textContent=He),ut=s(l),Z=a(l,"SPAN",{});var Ze=u(Z);f=a(Ze,"UL",{class:!0});var p=u(f);N=a(p,"LI",{});var oe=u(N);bt=r(oe,Me),ft=r(oe," WELCOME"),oe.forEach(h),vt=s(p),P=a(p,"LI",{});var re=u(P);mt=r(re,Ee),pt=r(re," AI_TEAM"),re.forEach(h),_t=s(p),q=a(p,"LI",{});var ce=u(q);Tt=r(ce,we),Ct=r(ce,"  CONNECTIONS_LEFT"),ce.forEach(h),xt=s(p),O=a(p,"LI",{});var he=u(O);Lt=r(he,Ie),gt=r(he,"  X Y"),he.forEach(h),p.forEach(h),Ze.forEach(h),yt=s(l),L=a(l,"H3",{class:!0,"data-svelte-h":!0}),c(L)!=="svelte-1xqpm8b"&&(L.textContent=Se),Ht=s(l),J=a(l,"SPAN",{});var Je=u(J);d=a(Je,"UL",{class:!0});var v=u(d);R=a(v,"LI",{});var de=u(R);Mt=r(de,Ae),Et=r(de," WELCOME"),de.forEach(h),wt=s(v),W=a(v,"LI",{});var ue=u(W);It=r(ue,Ne),St=r(ue," GRAPHIC"),ue.forEach(h),At=s(v),k=a(v,"LI",{});var be=u(k);Nt=r(be,Pe),Pt=r(be," MSZ"),be.forEach(h),qt=s(v),B=a(v,"LI",{});var fe=u(B);Ot=r(fe,qe),Rt=r(fe," MCT"),fe.forEach(h),Wt=s(v),D=a(v,"LI",{});var ve=u(D);kt=r(ve,Oe),Bt=r(ve," TNA"),ve.forEach(h),Dt=s(v),U=a(v,"LI",{});var me=u(U);Ut=r(me,Re),zt=r(me," PNW (for each player already connected)"),me.forEach(h),v.forEach(h),Je.forEach(h),Ft=s(l),Gt=a(l,"BR",{}),jt=r(l,`
        If the team name is invalid, the server will instantly reply with a `),z=a(l,"B",{"data-svelte-h":!0}),c(z)!=="svelte-1gfbn32"&&(z.textContent=We),Vt=r(l,` followed by a newline and close the connection.
        `),Xt=a(l,"BR",{}),Yt=s(l),Zt=a(l,"BR",{}),Jt=r(l,`
        Since the AI's actions are limited by a cooldown, a queue of 10 commands is provided as to `),F=a(l,"B",{"data-svelte-h":!0}),c(F)!=="svelte-153n6kw"&&(F.textContent=ke),Kt=r(l,` its inputs, if the queue is full but the client still tries to send commands, this new command is ignored.
        `),g=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(g)!=="svelte-ht4gfk"&&(g.innerHTML=Be),Qt=s(l),G=a(l,"SPAN",{"data-svelte-h":!0}),c(G)!=="svelte-1dapeyo"&&(G.innerHTML=De),$t=s(l),y=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(y)!=="svelte-1m5uf57"&&(y.innerHTML=Ue),te=s(l),j=a(l,"SPAN",{"data-svelte-h":!0}),c(j)!=="svelte-21f0lo"&&(j.innerHTML=ze),ee=s(l),H=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(H)!=="svelte-1dmvtfp"&&(H.innerHTML=Fe),le=s(l),V=a(l,"SPAN",{"data-svelte-h":!0}),c(V)!=="svelte-u8259p"&&(V.innerHTML=Ge),ne=s(l),M=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(M)!=="svelte-i1gc00"&&(M.innerHTML=je),ae=s(l),X=a(l,"SPAN",{"data-svelte-h":!0}),c(X)!=="svelte-1wh3zuu"&&(X.innerHTML=Ve),ie=s(l),E=a(l,"H1",{class:!0,"data-svelte-h":!0}),c(E)!=="svelte-xc25r0"&&(E.innerHTML=Xe),se=s(l),Y=a(l,"SPAN",{"data-svelte-h":!0}),c(Y)!=="svelte-1uvi80w"&&(Y.innerHTML=Ye),l.forEach(h),$.forEach(h),this.h()},h(){b(_,"class","h1 py-4"),b(Q,"class","!border-t-2"),b(T,"class","h2 py-4"),b(C,"class","h2 py-4"),b(x,"class","h3"),b(f,"class","list-disc pl-5"),b(L,"class","h3"),b(d,"class","list-disc pl-5"),b(g,"class","h2 py-4"),b(y,"class","h2 py-4"),b(H,"class","h2 py-4"),b(M,"class","h2 py-4"),b(E,"class","h2 py-4"),b(e,"class","space-y-5 h-[90%] w-full overflow-y-scroll"),b(m,"class","h-full m-8 flex")},m(K,$){el(K,m,$),t(m,e),t(e,_),t(e,tt),t(e,w),t(e,et),t(e,Q),t(e,lt),t(e,T),t(e,nt),t(e,I),t(e,at),t(e,it),t(e,st),t(e,ot),t(e,rt),t(e,S),t(e,ct),t(e,C),t(e,ht),t(e,A),t(e,dt),t(e,x),t(e,ut),t(e,Z),t(Z,f),t(f,N),t(N,bt),t(N,ft),t(f,vt),t(f,P),t(P,mt),t(P,pt),t(f,_t),t(f,q),t(q,Tt),t(q,Ct),t(f,xt),t(f,O),t(O,Lt),t(O,gt),t(e,yt),t(e,L),t(e,Ht),t(e,J),t(J,d),t(d,R),t(R,Mt),t(R,Et),t(d,wt),t(d,W),t(W,It),t(W,St),t(d,At),t(d,k),t(k,Nt),t(k,Pt),t(d,qt),t(d,B),t(B,Ot),t(B,Rt),t(d,Wt),t(d,D),t(D,kt),t(D,Bt),t(d,Dt),t(d,U),t(U,Ut),t(U,zt),t(e,Ft),t(e,Gt),t(e,jt),t(e,z),t(e,Vt),t(e,Xt),t(e,Yt),t(e,Zt),t(e,Jt),t(e,F),t(e,Kt),t(e,g),t(e,Qt),t(e,G),t(e,$t),t(e,y),t(e,te),t(e,j),t(e,ee),t(e,H),t(e,le),t(e,V),t(e,ne),t(e,M),t(e,ae),t(e,X),t(e,ie),t(e,E),t(e,se),t(e,Y)},p:pe,i:pe,o:pe,d(K){K&&h(m)}}}class il extends $e{constructor(m){super(),tl(this,m,null,ll,Qe,{})}}export{il as component};
